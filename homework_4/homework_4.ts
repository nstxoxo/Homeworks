// ### NORMAL level
// #### Task 1 üíª
// - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ (—Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ, –¥–µ–ª–µ–Ω–∏–µ, 
// –∏ –µ—â–µ –ª—é–±–æ–π/–ª—é–±—ã–µ –Ω–∞ –≤—ã–±–æ—Ä) –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: 2 —Ü–∏—Ñ—Ä—ã –∏ –æ–ø–µ—Ä–∞—Ü–∏—è
// - –ù–∞–ø–∏—Å–∞—Ç—å 10 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ (–º–µ—Ç–æ–¥–æ–≤) –ø–æ –≤—ã–∑–æ–≤—É –¥–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–∏, 
// –∫–æ—Ç–æ—Ä—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–≤–æ–¥–∏—Ç –ª–∏–±–æ: 
// —á—Ç–æ "—Ç–µ—Å—Ç" –ø—Ä–æ—à–µ–ª, –ª–∏–±–æ —á—Ç–æ "—Ç–µ—Å—Ç" —Å–≤–∞–ª–∏–ª—Å—è
// collaborato - slavaPislyakov

class Calculator {
    firstNumber: number
    secondNumber: number
    operation: string

    constructor(firstNumber: number, secondNumber: number, operation: string) {
        this.firstNumber = firstNumber
        this.secondNumber = secondNumber
        this.operation = operation
    }

    sumNumbers() {
        return this.firstNumber + this.secondNumber
    }

    minusNumbers() {
        return this.firstNumber - this.secondNumber
    }

    multiplyNumbers() {
        return this.firstNumber * this.secondNumber
    }

    divideNumbers() {
        return this.firstNumber / this.secondNumber
    }

    exponentianingNumbers() {
        return Math.pow(this.firstNumber,this.secondNumber)
    }

    compute() {
        switch (this.operation) {
          case '+':
            return this.sumNumbers()
          case '-':
            return this.minusNumbers()
          case '*':
            return this.multiplyNumbers()
          case '/':
            return this.divideNumbers()
          case '^':
            return this.exponentianingNumbers()            
        }
      }
}

function testCalc(firstNumber: number, secondNumber: number, operation: string, expectedResult: number) {
    const calc = new Calculator(firstNumber,secondNumber,operation)
    if (calc.compute() === expectedResult) {
        console.log("Test passed");
    } else {
        console.log("Test failed");
    }
}

testCalc(4, 4, "-", 0)
testCalc(1, 4, "+", 5)
testCalc(3, 6, "*", 18)
testCalc(16, 4, "/", 4)
testCalc(2, 3, "^", 8)

testCalc(1, 4, "-", 7)
testCalc(3, 8, "+", 3)
testCalc(3, 3, "*", 7)
testCalc(13, 5, "/", 6)
testCalc(3, 4, "^", 8)